<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="5" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-15T13:16:50 GMT" name="Smoke Suite" finished-at="2022-03-15T13:17:49 GMT" duration-ms="58857">
    <groups>
    </groups>
    <test started-at="2022-03-15T13:16:50 GMT" name="Login Test" finished-at="2022-03-15T13:17:49 GMT" duration-ms="58857">
      <class name="com.ap.tests.LoginTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:16:50 GMT" name="init" finished-at="2022-03-15T13:16:50 GMT" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:16:50 GMT" name="launchBrowser" finished-at="2022-03-15T13:16:55 GMT" duration-ms="5012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="initPages(org.testng.ITestResult)[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:16:55 GMT" name="initPages" finished-at="2022-03-15T13:17:02 GMT" duration-ms="6868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.verifyValidLogin()[pri:0, instance:com.ap.tests.LoginTest@53fdffa1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPages -->
        <test-method signature="verifyValidLogin()[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:02 GMT" name="verifyValidLogin" finished-at="2022-03-15T13:17:10 GMT" duration-ms="8209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:10 GMT" name="afterMethod" finished-at="2022-03-15T13:17:10 GMT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidLogin status=SUCCESS method=LoginTest.verifyValidLogin()[pri:0, instance:com.ap.tests.LoginTest@53fdffa1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="initPages(org.testng.ITestResult)[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:10 GMT" name="initPages" finished-at="2022-03-15T13:17:15 GMT" duration-ms="5409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.verifyInvalidLogin()[pri:1, instance:com.ap.tests.LoginTest@53fdffa1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPages -->
        <test-method signature="verifyInvalidLogin()[pri:1, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:15 GMT" name="verifyInvalidLogin" finished-at="2022-03-15T13:17:22 GMT" duration-ms="7058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:22 GMT" name="afterMethod" finished-at="2022-03-15T13:17:22 GMT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInvalidLogin status=SUCCESS method=LoginTest.verifyInvalidLogin()[pri:1, instance:com.ap.tests.LoginTest@53fdffa1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="initPages(org.testng.ITestResult)[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:22 GMT" name="initPages" finished-at="2022-03-15T13:17:25 GMT" duration-ms="2638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.verifyEmptyLogin()[pri:2, instance:com.ap.tests.LoginTest@53fdffa1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPages -->
        <test-method retried="true" signature="verifyEmptyLogin()[pri:2, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:25 GMT" name="verifyEmptyLogin" finished-at="2022-03-15T13:17:31 GMT" duration-ms="5894" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.ap.tests.LoginTest.verifyEmptyLogin(LoginTest.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmptyLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:31 GMT" name="afterMethod" finished-at="2022-03-15T13:17:31 GMT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmptyLogin status=SKIP method=LoginTest.verifyEmptyLogin()[pri:2, instance:com.ap.tests.LoginTest@53fdffa1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="initPages(org.testng.ITestResult)[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:31 GMT" name="initPages" finished-at="2022-03-15T13:17:34 GMT" duration-ms="3012" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.verifyEmptyLogin()[pri:2, instance:com.ap.tests.LoginTest@53fdffa1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPages -->
        <test-method signature="verifyEmptyLogin()[pri:2, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:34 GMT" name="verifyEmptyLogin" finished-at="2022-03-15T13:17:40 GMT" duration-ms="5855" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.ap.tests.LoginTest.verifyEmptyLogin(LoginTest.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmptyLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:40 GMT" name="afterMethod" finished-at="2022-03-15T13:17:40 GMT" duration-ms="711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmptyLogin status=FAILURE method=LoginTest.verifyEmptyLogin()[pri:2, instance:com.ap.tests.LoginTest@53fdffa1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="initPages(org.testng.ITestResult)[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:40 GMT" name="initPages" finished-at="2022-03-15T13:17:47 GMT" duration-ms="6799" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.verifyForgotPasswordPageNavigation()[pri:3, instance:com.ap.tests.LoginTest@53fdffa1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPages -->
        <test-method signature="verifyForgotPasswordPageNavigation()[pri:3, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:47 GMT" name="verifyForgotPasswordPageNavigation" finished-at="2022-03-15T13:17:48 GMT" duration-ms="963" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgotPasswordPageNavigation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:48 GMT" name="afterMethod" finished-at="2022-03-15T13:17:48 GMT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyForgotPasswordPageNavigation status=SUCCESS method=LoginTest.verifyForgotPasswordPageNavigation()[pri:3, instance:com.ap.tests.LoginTest@53fdffa1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.ap.tests.LoginTest@53fdffa1]" started-at="2022-03-15T13:17:48 GMT" name="quit" finished-at="2022-03-15T13:17:49 GMT" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- com.ap.tests.LoginTest -->
    </test> <!-- Login Test -->
  </suite> <!-- Smoke Suite -->
</testng-results>
